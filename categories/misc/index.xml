<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>misc on Archive</title>
    <link>https://xxxhidexxx.github.io/categories/misc/</link>
    <description>Recent content in misc on Archive</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>null</copyright>
    <lastBuildDate>Thu, 25 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://xxxhidexxx.github.io/categories/misc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>这个网站的搭建方法</title>
      <link>https://xxxhidexxx.github.io/helloworld/</link>
      <pubDate>Thu, 25 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://xxxhidexxx.github.io/helloworld/</guid>
      <description>这是一个备忘录，不是一个教程，只记录一些解决方法，不赘述来龙去脉。&#xA;主要目标：快速搭建一个安全免费的静态网站，并且搭建的网站要支持 LaTeX 排版。&#xA;0x00 前置 时间：2024 年 1 月；系统：windows 11。&#xA;依次安装 git，go，chocolatey，hugo，版本都选最新版，并注册一个 github 账号。&#xA;0x01 原理 流程：本地建站，网站文件存入本地仓库，本地仓库关联远程仓库，剩下交给 github 托管。&#xA;具体来说，我们将博客内容写到 markdown 格式的文件中，之后 hugo 会用 go 语言将 markdown 文件转换为 html 文件，就已经可以在本地浏览网页了。我们将 hugo 生成的 html 文件提交到 github 仓库，使用 github pages 生成静态网站，就搭建了由 github 托管的静态网站。&#xA;技术难点：github 连接超时。&#xA;0x02 建立远程仓库 建立两个新的仓库，分别作为源仓库和 github pages 的仓库。&#xA;其中 github pages 的仓库必须命名为 id.github.io，id 是 github 账户名。建立选项中勾选 public 和 add readme 两项，意义是将 main 作为主分支。&#xA;源仓库也勾选 readme，其余随意。这个源仓库主要是备份用的。&#xA;建立之后将源仓库克隆到本地。&#xA;0x03 本地建站 进入刚刚克隆到本地的仓库文件夹，打开终端，这个目录将会作为网站的根目录。在终端输入 ~/&amp;gt; hugo new site something 就会看到在根目录下出现了 hugo 建立的特定名称的若干文件夹和文件，作用如下所述。</description>
    </item>
  </channel>
</rss>
